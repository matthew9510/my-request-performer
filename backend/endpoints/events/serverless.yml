org: softstack
app: my-request
service: my-request-api-service

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  region: us-west-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: events/create.create
    events:
      - http:
          path: events
          method: post
          cors: true

  list:
    handler: events/list.list
    events:
      - http:
          path: events
          method: get
          cors: true

  get:
    handler: events/get.get
    events:
      - http:
          path: events/{id}
          method: get
          cors: true

  update:
    handler: events/update.update
    events:
      - http:
          path: events/{id}
          method: put
          cors: true

  delete:
    handler: events/delete.delete
    events:
      - http:
          path: events/{id}
          method: delete
          cors: true

resources:
  Resources:
    EventsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
