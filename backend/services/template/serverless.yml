service: <ENDPOINT_NAME>
app: my-request
org: softstack

package:
  artifact: https://s3.amazonaws.com/my-request-lambda-dependencies/nodejs.zip
  exclude:
    - node_modules/**
  include:
    - src/**

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  region: us-west-2
  stackName: my-request-app
  apiName: ${self:app}-${self:service}-api
  profile: ${self:org}
  environment:
    DYNAMODB_TABLE: ${self:app}-${self:service}-table
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  ${self:app}-${self:service}:
    handler: src/index.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
    layers:
      - arn:aws:lambda:us-west-2:418615587574:layer:my-request-libraries:3

resources:
  Resources:
    ${self:provider.environment.DYNAMODB_TABLE}:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
