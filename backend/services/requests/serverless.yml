service: requests
app: my-request
# org: ssfdev

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  region: us-west-2
  stackName: ${self:app}-${self:service}-${self:provider.stage}
  apiName: ${self:app}-${self:service}-${self:provider.stage}
  profile: default
  stage: ${opt:stage, 'dev'}
  stackTags:
    PROJECT: ${self:app}
    STAGE: ${self:provider.stage}
  environment:
    DYNAMODB_TABLE: ${self:app}-${self:service}-${self:provider.stage}
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  endpoints:
    name: ${self:app}-${self:service}-${self:provider.stage}
    handler: src/index.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
    layers:
      - arn:aws:lambda:us-west-2:418615587574:layer:my-request-libraries:4
    role: arn:aws:iam::418615587574:role/requests-iot-pub

resources:
  Resources:
    myDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdOn
            AttributeType: S
          - AttributeName: modifiedOn
            AttributeType: S
          - AttributeName: eventId
            AttributeType: S
          - AttributeName: performerId
            AttributeType: S
          - AttributeName: requesterId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        GlobalSecondaryIndexes:
          - IndexName: eventId-createdOn-index
            KeySchema:
              - AttributeName: eventId
                KeyType: HASH
              - AttributeName: createdOn
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: eventId-modifiedOn-index
            KeySchema:
              - AttributeName: eventId
                KeyType: HASH
              - AttributeName: modifiedOn
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: performerId-modifiedOn-index
            KeySchema:
              - AttributeName: performerId
                KeyType: HASH
              - AttributeName: modifiedOn
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: requesterId-createdOn-index
            KeySchema:
              - AttributeName: requesterId
                KeyType: HASH
              - AttributeName: createdOn
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
custom:
  apiEndpoint:
    Fn::Join:
      - ""
      - - "https://"
        - Ref: "ApiGatewayRestApi"
        - ".execute-api."
        - ${self:provider.region}.
        - Ref: "AWS::URLSuffix"
        - "/"
        - ${self:provider.stage}
        - "/"
outputs:
  TableName: ${self:provider.environment.DYNAMODB_TABLE}
  URL: ${self:custom.apiEndpoint}
